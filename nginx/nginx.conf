upstream django {
    server web:8000;
}

proxy_cache_valid 2h;
proxy_cache_path /etc/nginx/cache levels=1:2 inactive=2h keys_zone=mycache:10m max_size=200m;
--with-http_image_filter_module

server {
    listen      80;
    server_name kirovcvetok.ru;
    location / {
        return 301 https://$host$request_uri;
    }

}

server {

    listen          443 ssl;
    server_name     kirovcvetok.ru;

    ssl_certificate     /etc/nginx/ssl/kirovcvetok.ru.crt;
    ssl_certificate_key /etc/nginx/ssl/kirovcvetok.ru.key;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout   70;

    ssl_prefer_server_ciphers   on;
    ssl_stapling                on;
    ssl_trusted_certificate     /etc/nginx/ssl/ca.crt;
    resolver                    ns5.hosting.reg.ru ns6.hosting.reg.ru;

    location / {
        proxy_pass                      http://django;
        proxy_set_header                Host $host;
        proxy_set_header                X-Real-IP $remote_addr;
        proxy_set_header                X-Forwarded-Proto https;

        proxy_cache                     mycache;
        proxy_cache_valid               200 10s;
        proxy_cache_lock                on;
        proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
        proxy_cache_background_update   on;
        expires                         6h;
        add_header                      Cache-Control "public";

    }

    location /static/ {
        alias                           /home/app/web/backend/static/;
        proxy_cache                     mycache;
        proxy_cache_valid               200 10s;
        proxy_cache_lock                on;
        proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
        proxy_cache_background_update   on;
        expires                         2d;
        add_header                      Cache-Control "public";
    }

    location ~ ^/(media|(?:\d+|-)x(?:\d+|-))/.*\.(jpg|JPG|jpeg|JPEG|gif|GIF|png|PNG|webp|WEBP)$  {
        proxy_pass                      http://80.78.247.176:9001;
        proxy_set_header                Accept $http_accept;

        alias                           /home/app/web/backend/media/;
        proxy_cache                     mycache;
        proxy_cache_valid               200 10s;
        proxy_cache_lock                on;
        proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
        proxy_cache_background_update   on;
        expires                         1M;
        add_header                      Cache-Control "public";
    }
}

server {
    listen  9001;
    allow   80.78.247.176;
    deny    all;

    # подразумевается, что
    # static - /usr/share/nginx/html/static
    # media -  /usr/share/nginx/html/media
    root /home/app/web/backend;

    if ($uri ~ ^/(\d+|-)x(\d+|-)/) {
        set $w $1;
        set $h $2;
    }

    # Замена оригинального изображения на webp-дубль, при условии поддержки браузером webp-формата
    if ($http_accept ~* "webp") {
        rewrite ^(.*)\.(jpg|jpeg|png)$ $1.webp last;
    }

    # Обрезка webp-изображений
    location ~ ^/(?:\d+|-)x(?:\d+|-)/crop(/(static|media)/.*)\.(?:webp|WEBP)$ {
        try_files $1.webp $1.jpg $1.jpeg $1.png;
        image_filter_buffer 20M;
        image_filter crop $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    # Ресайзинг webp-изображений
    location ~ ^/(?:\d+|-)x(?:\d+|-)(/(static|media)/.*)\.(?:webp|WEBP)$ {
        try_files $1.webp $1.jpg $1.jpeg $1.png;
        image_filter_buffer 20M;
        image_filter resize $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    # Обрезка оригинальных изображений
    location ~ ^/(?:\d+|-)x(?:\d+|-)/crop(/(static|media)/.*)\.(?:jpg|JPG|jpeg|JPEG|gif|GIF|png|PNG)$ {
        rewrite ^/[\w\d-]+/crop(.*)$ /$1;
        image_filter_buffer 20M;
        image_filter crop $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    # Ресайзинг оригинальных изображений
    location ~ ^/(?:\d+|-)x(?:\d+|-)(/(static|media)/.*)\.(?:jpg|JPG|jpeg|JPEG|gif|GIF|png|PNG)$ {
        rewrite ^/[\w\d-]+/(.*)$ /$1;
        image_filter_buffer 20M;
        image_filter resize $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    location ~ ^(/(static|media)/.*)\.webp$ {
        try_files $1.webp $1.jpg $1.jpeg $1.png;
        expires max;
    }
}

# server {
#
#     listen          443 ssl;
#     server_name     kirovcvetok.ru;
#
#     ssl_certificate     /etc/nginx/ssl/kirovcvetok.ru.crt;
#     ssl_certificate_key /etc/nginx/ssl/kirovcvetok.ru.key;
#
#     ssl_session_cache   shared:SSL:10m;
#     ssl_session_timeout 10m;
#     keepalive_timeout   70;
#
#     ssl_prefer_server_ciphers   on;
#     ssl_stapling                on;
#     ssl_trusted_certificate     /etc/nginx/ssl/ca.crt;
#     resolver                    ns5.hosting.reg.ru ns6.hosting.reg.ru;
#
#     location / {
#         proxy_pass                      http://django;
#         proxy_set_header                Host $host;
#         proxy_set_header                X-Real-IP $remote_addr;
#         proxy_set_header                X-Forwarded-Proto https;
#
#         proxy_cache                     mycache;
#         proxy_cache_valid               200 10s;
#         proxy_cache_lock                on;
#         proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
#         proxy_cache_background_update   on;
#         expires                         6h;
#         add_header                      Cache-Control "public";
#
#     }
#     location /static/ {
#         alias                           /home/app/web/backend/static/;
#         proxy_cache                     mycache;
#         proxy_cache_valid               200 10s;
#         proxy_cache_lock                on;
#         proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
#         proxy_cache_background_update   on;
#         expires                         2d;
#         add_header                      Cache-Control "public";
#     }
#
#     location /media/ {
#         alias                           /home/app/web/backend/media/;
#         proxy_cache                     mycache;
#         proxy_cache_valid               200 10s;
#         proxy_cache_lock                on;
#         proxy_cache_use_stale           updating error timeout invalid_header http_500 http_502 http_504;
#         proxy_cache_background_update   on;
#         expires                         1M;
#         add_header                      Cache-Control "public";
#     }
# }

